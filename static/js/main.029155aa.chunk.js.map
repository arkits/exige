{"version":3,"sources":["serviceWorker.js","components/Drawer.js","components/AppBar.js","store/ExigeStore.js","pages/dashboard/Map.js","components/AboutDialog.js","components/DataManager/AddDataForm.js","components/DataManager/OperationsList.js","components/DataManager/DataManagerDialog.js","pages/dashboard/OptionsBar/OptionsBar.js","pages/dashboard/MouseLocationPanel.js","pages/dashboard/Dashboard.js","App.js","theme.js","index.js","../external \"Cesium\""],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","drawer","width","TemporaryDrawer","classes","React","useState","isOpen","setIsOpen","toggleDrawer","open","event","type","key","Fragment","IconButton","color","aria-label","onClick","edge","style","Drawer","anchor","onClose","role","onKeyDown","className","display","height","flexDirection","flexGrow","Typography","variant","fontFamily","fontWeight","fontStyle","marginTop","marginBottom","Divider","List","ListItem","button","component","RouterLink","to","ListItemIcon","ListItemText","primary","target","href","theme","titleText","subtitleText","appBar","zIndex","ExigeAppBar","AppBar","position","Toolbar","noWrap","ExigeStore","sio","status","isEnabled","operations","gufi","state","owner","exige","hidden","Color","GREEN","withAlpha","volumes","volume","outline_polygon","vertices","lng","lat","altitude_lower","value","reference","units","altitude_upper","RED","positions","mouseLocation","snackbar","message","elementsToggle","operationsTable","positionsTable","map","cameraCenter","latitude","longitude","altitude","drawerOpen","decorate","observable","ExigeStoreContext","createContext","Map","observer","exigeStore","useContext","viewer","useRef","cameraDest","Cartesian3","fromDegrees","useEffect","console","log","Ion","defaultAccessToken","Object","values","animation","timeline","fullscreenButton","ref","e","cesiumElement","scene","debugShowFramesPerSecond","requestRenderMode","onMouseMove","data","cartesianPosition","longitudeString","latitudeString","ellipsoid","globe","cartesian","camera","pickEllipsoid","cartographicLocation","cartesianToCartographic","Math","toDegrees","toFixed","calculateCoordinateFromCartesian","endPosition","parseFloat","destination","duration","operation","entities","ordinal","operationVolume","id","coordsArray","polygon","point","push","cesiumPolygon","fromDegreesArrayHeights","name","extrudedHeight","perPositionHeight","hierarchy","material","outlineColor","BLACK","outline","AboutDialog","setOpen","handleClose","Button","backgroundColor","textTransform","Dialog","fullWidth","maxWidth","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","operationModelParser","parsedOperation","toLowerCase","details","toUpperCase","BLUE","AddDataForm","loadData","setLoadData","TextField","label","multiline","rows","onChange","size","endIcon","Icon","inputData","JSON","parse","Array","isArray","forEach","error","MuiVirtualizedTable","getRowClassName","index","props","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","TableCell","tableCell","noClick","align","numeric","headerRenderer","headerHeight","this","tableProps","gridStyle","direction","table","rowClassName","dataKey","other","headerProps","PureComponent","defaultProps","VirtualizedTable","withStyles","alignItems","boxSizing","flip","paddingRight","undefined","cursor","flex","OperationsTable","Paper","rowCount","length","rowGetter","Transition","forwardRef","Slide","TabPanel","children","Box","p","a11yProps","DataManager","handleDialogClose","tabValue","setTabValue","marginLeft","TransitionComponent","keepMounted","elevation","Tabs","centered","newValue","indicatorColor","Tab","OperationsList","OptionsBar","MouseLocationPanel","fontSize","stringify","latitudeRad","PI","n","xtile","trunc","ytile","tan","cos","parseInt","calcMouseLocationDetail","Dashboard","root","content","paddingTop","spacing","mainContent","Inspector","App","hideLoader","basename","process","path","createMuiTheme","palette","main","indigo","secondary","loader","document","querySelector","ReactDOM","render","ThemeProvider","CssBaseline","classList","add","showLoader","remove","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports","Cesium"],"mappings":"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","file":"static/js/main.029155aa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Drawer,\n    List,\n    Divider,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Typography,\n    IconButton,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TimelineRoundedIcon from '@material-ui/icons/TimelineRounded';\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    drawer: {\n        width: 250,\n    },\n});\n\nfunction TemporaryDrawer() {\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setIsOpen(open);\n    };\n\n    return (\n        <div>\n            <React.Fragment>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={toggleDrawer(true)}\n                    edge=\"start\"\n                    style={{ color: 'white' }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Drawer anchor=\"left\" open={isOpen} onClose={toggleDrawer(false)}>\n                    <div\n                        role=\"presentation\"\n                        onClick={toggleDrawer(false)}\n                        onKeyDown={toggleDrawer(false)}\n                    >\n                        <div className={classes.drawer}></div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                height: '100vh',\n                                flexDirection: 'column',\n                            }}\n                        >\n                            <div style={{ flexGrow: '1' }}>\n                                <center>\n                                    <Typography\n                                        variant=\"h4\"\n                                        style={{\n                                            fontFamily: 'IBM Plex Mono',\n                                            fontWeight: 'bold',\n                                            fontStyle: 'italic',\n                                            marginTop: '20px',\n                                            marginBottom: '20px',\n                                        }}\n                                    >\n                                        ~/Exige\n                                    </Typography>\n                                </center>\n                                <Divider />\n                                <List>\n                                    <ListItem button component={RouterLink} to=\"/\">\n                                        <ListItemIcon>\n                                            <DashboardRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={'Dashboard'} />\n                                    </ListItem>\n                                    <ListItem button component={RouterLink} to=\"/inspector\">\n                                        <ListItemIcon>\n                                            <TimelineRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={'Inspector'} />\n                                    </ListItem>\n                                </List>\n                                <Divider />\n                            </div>\n                            <div style={{ marginBottom: '20px' }}>\n                                <center>\n                                    <a target=\"_blank\" href=\"https://github.com/arkits/exige\">\n                                        <IconButton\n                                            color=\"white\"\n                                            aria-label=\"upload picture\"\n                                            component=\"span\"\n                                        >\n                                            <GitHubIcon />\n                                        </IconButton>\n                                    </a>\n                                </center>\n                            </div>\n                        </div>\n                    </div>{' '}\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n}\n\nexport default TemporaryDrawer;\n","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from './Drawer';\n\nconst useStyles = makeStyles((theme) => ({\n    titleText: {\n        display: 'flex',\n        flexGrow: '1',\n        fontFamily: 'IBM Plex Mono',\n        fontWeight: 'bold',\n        fontStyle: 'italic',\n    },\n    subtitleText: {\n        fontFamily: 'IBM Plex Mono',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n}));\n\nfunction ExigeAppBar() {\n    const classes = useStyles();\n    return (\n        <div>\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <Drawer />\n                    <Typography className={classes.titleText} variant=\"h5\" noWrap>\n                        ~/Exige\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default ExigeAppBar;\n","import { observable, decorate } from 'mobx';\nimport { createContext } from 'react';\nimport { Color } from 'cesium';\n\nclass ExigeStore {\n    sio = {\n        status: 'DISCONNECTED',\n        isEnabled: false,\n    };\n    operations = {\n        'cc45e730-f464-465b-803f-30ca28751e04': {\n            gufi: 'cc45e730-f464-465b-803f-30ca28751e04',\n            state: 'ACTIVE',\n            owner: 'exige.xyz',\n            exige: {\n                hidden: false,\n                color: Color.GREEN.withAlpha(0.5),\n            },\n            volumes: [\n                {\n                    volume: {\n                        outline_polygon: {\n                            vertices: [\n                                {\n                                    lng: -122.50682830810545,\n                                    lat: 37.77587088725018,\n                                },\n                                {\n                                    lng: -122.398681640625,\n                                    lat: 37.8065289741725,\n                                },\n                                {\n                                    lng: -122.35954284667967,\n                                    lat: 37.71859032558816,\n                                },\n                                {\n                                    lng: -122.48794555664061,\n                                    lat: 37.72320698914131,\n                                },\n                            ],\n                        },\n                        altitude_lower: {\n                            value: 200,\n                            reference: 'W84',\n                            units: 'M',\n                        },\n                        altitude_upper: {\n                            value: 500,\n                            reference: 'W84',\n                            units: 'M',\n                        },\n                    },\n                },\n            ],\n        },\n        '921dceae-7ada-421b-a810-8ff193a144b5': {\n            gufi: '921dceae-7ada-421b-a810-8ff193a144b5',\n            state: 'CONTINGENT',\n            owner: 'exige.xyz',\n            exige: {\n                hidden: false,\n                color: Color.RED.withAlpha(0.5),\n            },\n            volumes: [\n                {\n                    volume: {\n                        outline_polygon: {\n                            vertices: [\n                                {\n                                    lng: -122.58613586425781,\n                                    lat: 37.62565281710451,\n                                },\n                                {\n                                    lng: -122.48176574707031,\n                                    lat: 37.623205521597406,\n                                },\n                                {\n                                    lng: -122.4872589111328,\n                                    lat: 37.59274354910639,\n                                },\n                                {\n                                    lng: -122.58991241455077,\n                                    lat: 37.601448242831204,\n                                },\n                            ],\n                        },\n                        altitude_lower: {\n                            value: 200,\n                            reference: 'W84',\n                            units: 'M',\n                        },\n                        altitude_upper: {\n                            value: 500,\n                            reference: 'W84',\n                            units: 'M',\n                        },\n                    },\n                },\n                {\n                    volume: {\n                        outline_polygon: {\n                            vertices: [\n                                {\n                                    lng: -122.47970581054688,\n                                    lat: 37.612055711412815,\n                                },\n\n                                {\n                                    lng: -122.3818588256836,\n                                    lat: 37.63489742852906,\n                                },\n\n                                {\n                                    lng: -122.37018585205077,\n                                    lat: 37.60308025953392,\n                                },\n                                {\n                                    lng: -122.48451232910155,\n                                    lat: 37.57859625002284,\n                                },\n                            ],\n                        },\n                        altitude_lower: {\n                            value: 200,\n                            reference: 'W84',\n                            units: 'M',\n                        },\n                        altitude_upper: {\n                            value: 500,\n                            reference: 'W84',\n                            units: 'M',\n                        },\n                    },\n                },\n            ],\n        },\n        // '0c145a38-231a-46ef-95f9-e30b1db43ae8': {\n        //     gufi: '0c145a38-231a-46ef-95f9-e30b1db43ae8',\n        //     state: 'ACTIVE',\n        //     owner: 'exige.xyz',\n        // },\n    };\n    positions = {};\n    mouseLocation = {};\n    snackbar = {\n        message: null,\n        isOpen: false,\n        type: null,\n    };\n    elementsToggle = {\n        mouseLocation: true,\n        operationsTable: true,\n        positionsTable: false,\n    };\n    map = {\n        cameraCenter: {\n            latitude: 37.69,\n            longitude: -122.44,\n            altitude: 50000,\n        },\n    };\n    drawerOpen = true;\n}\n\ndecorate(ExigeStore, {\n    sio: observable,\n    operations: observable,\n    positions: observable,\n    mouseLocation: observable,\n    snackbar: observable,\n    elementsToggle: observable,\n    map: observable,\n});\n\nexport const ExigeStoreContext = createContext(new ExigeStore());\n","import React, { useRef, useContext, useEffect } from 'react';\nimport { Cartesian3, Transforms, Math, Color, HeadingPitchRoll, Ion } from 'cesium';\nimport {\n    Viewer,\n    CameraFlyTo,\n    Model,\n    PolygonGraphics,\n    Entity,\n    GeoJsonDataSource,\n    CzmlDataSource,\n} from 'resium';\nimport { observer } from 'mobx-react';\nimport { ExigeStoreContext } from '../../store/ExigeStore';\n\nconst Map = observer(() => {\n    const exigeStore = useContext(ExigeStoreContext);\n\n    let viewer = useRef();\n\n    let cameraCenter = exigeStore.map.cameraCenter;\n    let cameraDest = Cartesian3.fromDegrees(\n        cameraCenter.longitude,\n        cameraCenter.latitude,\n        cameraCenter.altitude\n    );\n\n    useEffect(() => {\n        console.log('cameraDest got updated!', cameraDest);\n    }, [cameraDest]);\n\n    const calculateCoordinateFromCartesian = (cartesianPosition) => {\n        var longitudeString = 0;\n        var latitudeString = 0;\n\n        if (!viewer) return { longitudeString, latitudeString };\n        if (!viewer.scene) return { longitudeString, latitudeString };\n\n        var ellipsoid = viewer.scene.globe.ellipsoid;\n        var cartesian = viewer.scene.camera.pickEllipsoid(cartesianPosition, ellipsoid);\n\n        if (!cartesian) return { longitudeString, latitudeString };\n\n        var cartographicLocation = ellipsoid.cartesianToCartographic(cartesian);\n\n        longitudeString = Math.toDegrees(cartographicLocation.longitude).toFixed(15);\n        latitudeString = Math.toDegrees(cartographicLocation.latitude).toFixed(15);\n\n        return { longitudeString, latitudeString };\n    };\n\n    const onMouseMove = (data) => {\n        var { longitudeString, latitudeString } = calculateCoordinateFromCartesian(\n            data.endPosition\n        );\n        exigeStore.mouseLocation['lng'] = parseFloat(longitudeString);\n        exigeStore.mouseLocation['lat'] = parseFloat(latitudeString);\n    };\n\n    Ion.defaultAccessToken =\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzMDJkNjJkYy1iMTAxLTQ5NjktYThmNC0zN2YwNjUxYjBkYjUiLCJpZCI6MTk1NzQsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1NzU4NDc3OTJ9.YIZUsKDifeCV1hoT4N1kNoASGQzM3yJoox_GLxdD2lo';\n\n    const operations = Object.values(exigeStore.operations);\n\n    return (\n        <div>\n            <Viewer\n                animation={false}\n                timeline={false}\n                fullscreenButton={false}\n                style={{\n                    height: '93vh',\n                }}\n                ref={(e) => {\n                    viewer = e ? e.cesiumElement : null;\n                    if (e != null) {\n                        viewer.scene.debugShowFramesPerSecond = true;\n                        viewer.scene.requestRenderMode = true;\n                    }\n                }}\n                onMouseMove={onMouseMove}\n            >\n                <CameraFlyTo destination={cameraDest} duration={0} />\n\n                {operations.map((operation) => {\n                    if (operation?.exige?.hidden) {\n                        return null;\n                    }\n\n                    let entities = [];\n\n                    let ordinal = 1;\n\n                    for (var operationVolume of operation.volumes) {\n                        var id = operation.gufi + '_' + ordinal;\n\n                        ordinal++;\n\n                        var coordsArray = [];\n\n                        var volume = operationVolume.volume;\n\n                        var polygon = volume.outline_polygon;\n\n                        for (var point of polygon.vertices) {\n                            coordsArray.push(point.lng);\n                            coordsArray.push(point.lat);\n                            coordsArray.push(volume.altitude_upper.value);\n                        }\n\n                        const cesiumPolygon = Cartesian3.fromDegreesArrayHeights(coordsArray);\n\n                        entities.push(\n                            <Entity key={id} name={id}>\n                                <PolygonGraphics\n                                    name={id}\n                                    extrudedHeight={volume.altitude_lower.value}\n                                    perPositionHeight={true}\n                                    hierarchy={cesiumPolygon}\n                                    material={operation.exige.color}\n                                    outlineColor={Color.BLACK}\n                                    outline={true}\n                                />\n                            </Entity>\n                        );\n                    }\n\n                    return entities;\n                })}\n            </Viewer>\n        </div>\n    );\n});\n\nexport default Map;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Typography } from '@material-ui/core';\n\nexport default function AboutDialog() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                variant=\"contained\"\n                onClick={handleClickOpen}\n                style={{\n                    backgroundColor: '#ff5722',\n                    fontFamily: 'IBM Plex Mono',\n                    color: 'white',\n                    fontWeight: 'bold',\n                    fontStyle: 'italic',\n                    textTransform: 'capitalize',\n                }}\n            >\n                ~/Exige by ArKits\n            </Button>\n            <Dialog\n                fullWidth\n                maxWidth={'sm'}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"about-exige-dialog\"\n            >\n                <DialogTitle>\n                    <Typography\n                        variant=\"h5\"\n                        style={{\n                            fontFamily: 'IBM Plex Mono',\n                            fontWeight: 'bold',\n                            fontStyle: 'italic',\n                        }}\n                    >\n                        About ~/Exige\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Exige is a proof-of-concept traffic visualizer for UAM / UTM data.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={handleClose}\n                        style={{\n                            color: 'white',\n                        }}\n                    >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}\n","import React, { useState, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { observer } from 'mobx-react';\nimport { ExigeStoreContext } from '../../store/ExigeStore';\nimport { TextField, Icon, Typography } from '@material-ui/core';\nimport { Color } from 'cesium';\n\nfunction operationModelParser(operation) {\n    let parsedOperation = {};\n\n    let gufi = operation?.reference?.id;\n\n    let owner = operation?.reference?.owner;\n    owner = owner.toLowerCase();\n\n    let state = operation?.details?.state;\n    state = state.toUpperCase();\n\n    let volumes = operation?.details?.volumes;\n\n    parsedOperation['gufi'] = gufi;\n    parsedOperation['owner'] = owner;\n    parsedOperation['state'] = state;\n    parsedOperation['volumes'] = volumes;\n\n    // Exige Option\n    parsedOperation['exige'] = {\n        hidden: false,\n        color: Color.BLUE.withAlpha(0.5),\n    };\n\n    return parsedOperation;\n}\n\nconst AddDataForm = observer(() => {\n    const [loadData, setLoadData] = useState('');\n\n    const exigeStore = useContext(ExigeStoreContext);\n\n    const loadDataToStore = () => {\n        console.log('Adding Operation to ExigeStore...');\n        try {\n            let inputData = JSON.parse(loadData);\n\n            if (Array.isArray(inputData)) {\n                inputData.forEach((operation) => {\n                    let parsedOperation = operationModelParser(operation);\n                    let gufi = parsedOperation['gufi'];\n                    exigeStore.operations[gufi] = parsedOperation;\n                });\n            } else {\n                let operation = operationModelParser(inputData);\n                let gufi = operation['gufi'];\n                exigeStore.operations[gufi] = operation;\n            }\n\n            setLoadData('');\n        } catch (error) {\n            console.error('Caught error when parsing inputData - ', error);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\">Add Data to Exige</Typography> <br></br>\n            <TextField\n                id=\"standard-multiline-static\"\n                label=\"Load Data\"\n                multiline\n                rows=\"10\"\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n                onChange={(data) => setLoadData(data.target.value)}\n                value={loadData}\n            />\n            <center>\n                <br />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    endIcon={<Icon>add</Icon>}\n                    onClick={loadDataToStore}\n                >\n                    Add Data\n                </Button>\n            </center>\n        </React.Fragment>\n    );\n});\n\nexport default AddDataForm;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { observer } from 'mobx-react';\nimport { ExigeStoreContext } from '../../store/ExigeStore';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nconst styles = (theme) => ({\n    flexContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n    },\n    table: {\n        '& .ReactVirtualized__Table__headerRow': {\n            flip: false,\n            paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\n        },\n    },\n    tableRow: {\n        cursor: 'pointer',\n    },\n\n    tableCell: {\n        flex: 1,\n    },\n    noClick: {\n        cursor: 'initial',\n    },\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n    static defaultProps = {\n        headerHeight: 48,\n        rowHeight: 48,\n    };\n\n    getRowClassName = ({ index }) => {\n        const { classes, onRowClick } = this.props;\n\n        return clsx(classes.tableRow, classes.flexContainer, {\n            [classes.tableRowHover]: index !== -1 && onRowClick != null,\n        });\n    };\n\n    cellRenderer = ({ cellData, columnIndex }) => {\n        const { columns, classes, rowHeight, onRowClick } = this.props;\n        return (\n            <TableCell\n                component=\"div\"\n                className={clsx(classes.tableCell, classes.flexContainer, {\n                    [classes.noClick]: onRowClick == null,\n                })}\n                variant=\"body\"\n                style={{ height: rowHeight }}\n                align={\n                    (columnIndex != null && columns[columnIndex].numeric) || false\n                        ? 'right'\n                        : 'left'\n                }\n            >\n                {cellData}\n            </TableCell>\n        );\n    };\n\n    headerRenderer = ({ label, columnIndex }) => {\n        const { headerHeight, columns, classes } = this.props;\n\n        return (\n            <TableCell\n                component=\"div\"\n                className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n                variant=\"head\"\n                style={{ height: headerHeight, backgroundColor: '#212121' }}\n                align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n            >\n                <span>{label}</span>\n            </TableCell>\n        );\n    };\n\n    render() {\n        const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\n        return (\n            <AutoSizer>\n                {({ height, width }) => (\n                    <Table\n                        height={height}\n                        width={width}\n                        rowHeight={rowHeight}\n                        gridStyle={{\n                            direction: 'inherit',\n                        }}\n                        headerHeight={headerHeight}\n                        className={classes.table}\n                        {...tableProps}\n                        rowClassName={this.getRowClassName}\n                    >\n                        {columns.map(({ dataKey, ...other }, index) => {\n                            return (\n                                <Column\n                                    key={dataKey}\n                                    headerRenderer={(headerProps) =>\n                                        this.headerRenderer({\n                                            ...headerProps,\n                                            columnIndex: index,\n                                        })\n                                    }\n                                    className={classes.flexContainer}\n                                    cellRenderer={this.cellRenderer}\n                                    dataKey={dataKey}\n                                    {...other}\n                                />\n                            );\n                        })}\n                    </Table>\n                )}\n            </AutoSizer>\n        );\n    }\n}\n\nMuiVirtualizedTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n    columns: PropTypes.arrayOf(\n        PropTypes.shape({\n            dataKey: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            numeric: PropTypes.bool,\n            width: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    headerHeight: PropTypes.number,\n    onRowClick: PropTypes.func,\n    rowHeight: PropTypes.number,\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nconst OperationsTable = observer(() => {\n    const exigeStore = useContext(ExigeStoreContext);\n\n    let operations = exigeStore.operations;\n    let rows = Object.values(operations);\n\n    return (\n        <Paper style={{ height: 500, width: '100%' }}>\n            <VirtualizedTable\n                rowCount={rows.length}\n                rowGetter={({ index }) => rows[index]}\n                columns={[\n                    {\n                        width: 350,\n                        label: 'GUFI',\n                        dataKey: 'gufi',\n                    },\n                    {\n                        width: 220,\n                        label: 'State',\n                        dataKey: 'state',\n                    },\n                    {\n                        width: 300,\n                        label: 'Owner',\n                        dataKey: 'owner',\n                    },\n                ]}\n            />\n        </Paper>\n    );\n});\n\nexport default OperationsTable;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport AddDataForm from './AddDataForm';\nimport OperationsList from './OperationsList';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nfunction DataManager() {\n    const [open, setOpen] = useState(false);\n\n    const handleDialogOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDialogClose = () => {\n        setOpen(false);\n    };\n\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                variant=\"contained\"\n                onClick={handleDialogOpen}\n                style={{\n                    marginLeft: '10px',\n                    backgroundColor: '#2e7d32',\n                    fontFamily: 'IBM Plex Mono',\n                    color: 'white',\n                    fontWeight: 'bold',\n                }}\n                endIcon={<Icon>add</Icon>}\n            >\n                Manage Data\n            </Button>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleDialogClose}\n                aria-label=\"manage-exige-data-dialog\"\n                maxWidth=\"md\"\n                fullWidth={true}\n            >\n                <DialogTitle>\n                    <div\n                        style={{\n                            fontFamily: 'IBM Plex Mono',\n                            fontWeight: 'bold',\n                            fontStyle: 'italic',\n                        }}\n                    >\n                        {'Manage Exige Data'}\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <Paper\n                        elevation={0}\n                        style={{\n                            backgroundColor: '#212121',\n                        }}\n                    >\n                        <Tabs\n                            centered\n                            value={tabValue}\n                            onChange={handleTabChange}\n                            indicatorColor=\"primary\"\n                            aria-label=\"manage-exige-data-tabs\"\n                        >\n                            <Tab label=\"List\" {...a11yProps(0)} />\n                            <Tab label=\"Add\" {...a11yProps(1)} />\n                        </Tabs>\n                    </Paper>\n                    <TabPanel value={tabValue} index={0}>\n                        <OperationsList />\n                    </TabPanel>\n                    <TabPanel value={tabValue} index={1}>\n                        <AddDataForm />\n                    </TabPanel>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDialogClose}>Close</Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}\n\nexport default DataManager;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport AboutDialog from '../../../components/AboutDialog';\nimport DataManager from '../../../components/DataManager/DataManagerDialog';\n\nfunction OptionsBar() {\n    return (\n        <div className=\"OptionsBar\">\n            <div style={{ flexGrow: 1 }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{\n                        marginLeft: '10px',\n                        fontFamily: 'IBM Plex Mono',\n                        color: 'white',\n                        fontWeight: 'bold',\n                    }}\n                    endIcon={<Icon>settings</Icon>}\n                >\n                    Options\n                </Button>\n                <DataManager />\n            </div>\n\n            <AboutDialog />\n        </div>\n    );\n}\n\nexport default OptionsBar;\n","import React, { useContext } from 'react';\nimport { observer } from 'mobx-react';\nimport { ExigeStoreContext } from '../../store/ExigeStore';\n\nconst MouseLocationPanel = observer(() => {\n    const exigeStore = useContext(ExigeStoreContext);\n\n    const calcMouseLocationDetail = () => {\n        let mouseLocation = exigeStore.mouseLocation;\n        let zoomLevel = 10;\n\n        // Conversion from co-ordinate to Slippy X/Y adapted from\n        // https://github.com/interuss/dss/blob/legacy/tcl4/datanode/src/slippy_util.py\n\n        let latitudeRad = Math.PI * (mouseLocation['lat'] / 180);\n        let n = 2.0 ** zoomLevel;\n        let xtile = Math.trunc(((mouseLocation['lng'] + 180.0) / 360.0) * n);\n        let ytile = Math.trunc(\n            ((1.0 - Math.log(Math.tan(latitudeRad) + 1 / Math.cos(latitudeRad)) / Math.PI) / 2.0) *\n                n\n        );\n\n        mouseLocation['x'] = xtile;\n        mouseLocation['y'] = ytile;\n        mouseLocation['zoomLevel'] = parseInt(zoomLevel);\n\n        return mouseLocation;\n    };\n\n    return (\n        <div className=\"MouseLocationPanel\">\n            <div style={{ fontFamily: 'IBM Plex Mono', fontWeight: 'bold', fontStyle: 'italic' }}>\n                Mouse Location\n            </div>\n            <pre style={{ fontFamily: 'IBM Plex Mono', fontSize: '11px' }}>\n                {JSON.stringify(calcMouseLocationDetail(), null, 2)}\n            </pre>\n        </div>\n    );\n});\n\nexport default MouseLocationPanel;\n","import React from 'react';\nimport Map from './Map';\nimport OptionsBar from './OptionsBar/OptionsBar';\nimport './Dashboard.css';\nimport MouseLocationPanel from './MouseLocationPanel';\n\nfunction Dashboard() {\n    return (\n        <div>\n            <Map />\n            <OptionsBar />\n            <MouseLocationPanel />\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboard from './pages/dashboard/Dashboard';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        height: '100%',\n    },\n    content: {\n        flex: '1',\n        height: '100vh',\n        display: 'flex',\n        paddingTop: theme.spacing(8),\n    },\n    mainContent: {\n        height: '100%',\n        width: '100%',\n    },\n}));\n\nfunction Inspector() {\n    return <h2>Inspector</h2>;\n}\n\nfunction App({ hideLoader }) {\n    const classes = useStyles();\n\n    useEffect(hideLoader, []);\n    return (\n        <div>\n            <Router basename={process.env.PUBLIC_URL}>\n                <AppBar />\n                <main className={classes.content}>\n                    <div className={classes.mainContent}>\n                        <Switch>\n                            <Route path=\"/inspector\">\n                                <Inspector />\n                            </Route>\n                            <Route path=\"/\">\n                                <Dashboard />\n                            </Route>\n                        </Switch>\n                    </div>\n                </main>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { indigo } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: indigo[500],\n        },\n        secondary: {\n            main: '#f44336',\n        },\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport 'mobx-react-lite/batchingForReactDom';\n\n// Loading indicator before React loads\nconst loader = document.querySelector('.loader');\nconst showLoader = () => loader.classList.remove('loader--hide');\nconst hideLoader = () => loader.classList.add('loader--hide');\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App hideLoader={hideLoader} showLoader={showLoader} />\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = Cesium;"],"sourceRoot":""}