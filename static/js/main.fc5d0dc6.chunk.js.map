{"version":3,"sources":["assets/Cesium_Air.glb","styles/useStyles.js","store/AskariStore.js","views/CoolStuff/Debug.js","views/CoolStuff/About.js","components/SocketIO/SioEvents.js","components/SocketIO/SioClient.js","views/Dashboard/MouseLocationPanel.js","views/Dashboard/OptionsBar/OptionsList.js","views/Dashboard/OptionsBar/OptionsButton.js","views/Dashboard/OptionsBar/ElementToggle.js","views/Dashboard/OptionsBar/OptionsBar.js","views/Dashboard/CesiumMap.js","views/Dashboard/PositionsTable.js","views/Dashboard/Dashboard.js","views/Inspector/DataTable.js","views/Inspector/Inspector.js","components/AskariSnackbar.js","components/ExigeDrawer.js","views/Loader/Loader.js","App.js","styles/theme.js","serviceWorker.js","index.js","../external \"Cesium\""],"names":["module","exports","useStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","content","flexGrow","backgroundColor","palette","background","default","AskariStore","sio","status","isEnabled","operations","positions","mouseLocation","snackbar","message","isOpen","type","elementsToggle","positionsTable","gridTiles","enabled","tilesData","zoomLevel","decorate","observable","gridZoomLevel","AskariStoreContext","createContext","StoreDump","observer","askariStore","useContext","style","overflowY","height","JSON","stringify","Debug","Grid","container","spacing","padding","item","xs","Card","maxHeight","CardContent","Typography","variant","About","alignItems","justifyContent","fontFamily","fontWeight","fontStyle","SioEvents","event","handler","console","log","sioStatus","data","SioClient","uri","options","transports","MouseLocationPanel","className","fontSize","latitudeRad","Math","PI","n","xtile","trunc","ytile","tan","cos","parseInt","calcMouseLocationDetail","RenderGridToggleSwitch","React","useState","switchState","setSwitchState","Switch","checked","value","onChange","RenderZoomLevelSelect","setZoomLevel","Select","target","MenuItem","OptionsList","direction","justify","Transition","forwardRef","props","ref","Slide","OptionsButton","open","setOpen","handleClose","Button","color","onClick","endIcon","Icon","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","maxWidth","fullWidth","aria-describedby","DialogTitle","id","DialogContent","DialogActions","ElementToggle","toggleElement","elementName","ButtonGroup","aria-label","OptionsBar","textTransform","CesiumMap","viewer","useRef","Object","values","cameraDest","Cartesian3","fromDegrees","calculateCoordinateFromCartesian","cartesianPosition","longitudeString","latitudeString","scene","ellipsoid","globe","cartesian","camera","pickEllipsoid","cartographicLocation","cartesianToCartographic","toDegrees","longitude","toFixed","latitude","full","animation","timeline","clockViewModel","shadows","fullscreenButton","selectionIndicator","automaticallyTrackDataSourceClocks","projectionPicker","position","navigator","clipboard","writeText","onMouseMove","endPosition","e","cesiumElement","destination","duration","once","map","origin","lonDeg","latDeg","modelMatrix","Transforms","eastNorthUpToFixedFrame","key","vid","url","glb","minimumPixelSize","maximumScale","operation","entities","operation_volumes","operationVolume","gufi","ordinal","coordsArray","protected_geography","coordinates","coords","coord","push","max_altitude_protected_wgs84_ft","polygon","fromDegreesArrayHeights","name","extrudedHeight","min_altitude_protected_wgs84_ft","perPositionHeight","hierarchy","material","Color","ORANGE","withAlpha","outlineColor","BLACK","outline","columns","label","align","format","toLocaleString","PositionsTable","rows","classes","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","minWidth","TableBody","row","hover","role","tabIndex","RenderMouseLocationPanel","RenderPositionsTable","Dashboard","bullet","margin","transform","title","pos","marginBottom","DataTable","showFlightDump","setShowFlightDump","gutterBottom","component","length","FormControlLabel","control","Date","metadata","brodcastTimestamp","getTime","sourceTimestamp","Inspector","paddingTop","AskariSnackbar","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","Fragment","IconButton","size","textDecoration","dividerTitle","ExigeDrawer","Drawer","paper","anchor","Link","to","Divider","List","ListItem","button","ListItemIcon","ListItemText","Loader","loadData","setLoadData","TextField","multiline","inputData","parse","error","App","CssBaseline","basename","process","path","Container","main","createMuiTheme","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","Cesium"],"mappings":"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","file":"static/js/main.fc5d0dc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cesium_Air.cd61bf2e.glb\";","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n      display: 'flex'\n  },\n  appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n  },\n  drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n\n  },\n  drawerPaper: {\n      width: drawerWidth\n  },\n  content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default\n  }\n}));\n\nexport default useStyles","import { observable, decorate } from 'mobx';\nimport { createContext } from 'react';\n\nclass AskariStore {\n    sio = {\n        status: 'DISCONNECTED',\n        isEnabled: false\n    };\n    operations = {};\n    positions = {};\n    mouseLocation = {};\n    snackbar = {\n        message: null,\n        isOpen: false,\n        type: null\n    };\n    elementsToggle = {\n        mouseLocation: true,\n        positionsTable: false\n    };\n    gridTiles = {\n        enabled: false,\n        tilesData: null,\n        zoomLevel: 10\n    };\n}\n\ndecorate(AskariStore, {\n    sio: observable,\n    operations: observable,\n    positions: observable,\n    mouseLocation: observable,\n    gridZoomLevel: observable,\n    snackbar: observable,\n    elementsToggle: observable\n});\n\nexport const AskariStoreContext = createContext(new AskariStore());\n","import React, { useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../store/AskariStore';\n\nconst StoreDump = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n    return (\n        <div style={{ display: \"flex\", overflowY: \"scroll\", height: \"80vh\"}}>\n            <pre >{JSON.stringify(askariStore, null, 2)}</pre>\n        </div>\n    );\n});\n\nfunction Debug() {\n    return (\n        <Grid container spacing={3} style={{padding:\"30px\"}}>\n            <Grid item xs={12}>\n                <Card style={{ maxHeight: '90vh' }}>\n                    <CardContent>\n                        <Typography variant=\"h5\">Store Dump</Typography>\n                        <br />\n                        <StoreDump />\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Debug;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nfunction About() {\n    return (\n        <Grid\n            container\n            spacing={3}\n            style={{\n                padding: '30px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '60vh'\n            }}\n        >\n            <Grid item xs={5}>\n                <Card style={{ maxHeight: '90vh' }}>\n                    <CardContent>\n                        <Typography\n                            variant=\"h5\"\n                            style={{\n                                fontFamily: 'IBM Plex Mono',\n                                fontWeight: 'bold',\n                                fontStyle: 'italic'\n                            }}\n                        >\n                            ~/Exige\n                        </Typography>{' '}\n                        <br />\n                        <Typography variant=\"body1\">\n                            Exige is a proof-of-concept traffic visualizer for UAM / UTM data.\n                        </Typography>\n                        <br />\n                        <Typography variant=\"body1\">Exige is built with: </Typography>\n                        <ul>\n                            <li>\n                                <Typography variant=\"body1\">React JS</Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"body1\">Material-UI</Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"body1\">Cesium</Typography>\n                            </li>\n                            <li>\n                                <Typography variant=\"body1\">Socket.IO</Typography>\n                            </li>\n                        </ul>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default About;\n","import React, { useContext } from \"react\";\nimport { Event } from \"react-socket-io\";\nimport { observer } from \"mobx-react\";\nimport { AskariStoreContext } from \"../../store/AskariStore\";\n\nconst SioEvents = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n  \n    const onConnect = () => {\n      console.log(\"Connected!\");\n      askariStore.sioStatus = \"CONNECTED\";\n    };\n\n    const onDisconnect = () => {\n      console.log(\"Disconnect!\");\n      askariStore.sioStatus = \"DISCONNECTED\";\n    };\n  \n    const onData = (data) => {\n      // console.log(\"Data! - \", data);\n      askariStore.positions[data[\"data\"][\"vid\"]] = data;\n    };\n  \n    return (\n      <>\n        <Event event=\"connect\" handler={onConnect} />\n        <Event event=\"disconnect\" handler={onDisconnect} />\n        <Event event=\"position\" handler={onData} />\n      </>\n    );\n  });\n\nexport default SioEvents;\n","import React, { useContext } from 'react';\nimport { Socket } from 'react-socket-io';\nimport SioEvents from './SioEvents';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../store/AskariStore';\n\nconst SioClient = observer(() => {\n    const uri = 'http://localhost:8786';\n    const options = { transports: ['websocket'] };\n\n    const askariStore = useContext(AskariStoreContext);\n\n    /*\n    const uri = \"https://archit.xyz/\";\n    const options = { \n      transports: [\"websocket\"],\n      path: \"/exige/socket.io/\" \n    };\n    */\n\n    if (askariStore.sio.isEnabled) {\n        return (\n            <>\n                <Socket uri={uri} options={options}>\n                    <SioEvents />\n                </Socket>\n            </>\n        );\n    } else {\n        return null;\n    }\n});\n\nexport default SioClient;\n","import React, { useContext } from 'react';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../store/AskariStore';\n\nconst MouseLocationPanel = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n\n    const calcMouseLocationDetail = () => {\n        let mouseLocation = askariStore.mouseLocation;\n        let zoomLevel = askariStore.gridTiles.zoomLevel;\n\n        // Conversion from co-ordinate to Slippy X/Y adapted from\n        // https://github.com/interuss/dss/blob/legacy/tcl4/datanode/src/slippy_util.py\n\n        let latitudeRad = Math.PI * (mouseLocation['lat'] / 180);\n        let n = 2.0 ** zoomLevel;\n        let xtile = Math.trunc(((mouseLocation['lng'] + 180.0) / 360.0) * n);\n        let ytile = Math.trunc(\n            ((1.0 - Math.log(Math.tan(latitudeRad) + 1 / Math.cos(latitudeRad)) / Math.PI) / 2.0) *\n                n\n        );\n\n        mouseLocation['x'] = xtile;\n        mouseLocation['y'] = ytile;\n        mouseLocation['zoomLevel'] = parseInt(zoomLevel);\n\n        return mouseLocation;\n    };\n\n    return (\n        <div className=\"MouseLocationPanel\">\n            <div style={{ fontFamily: 'IBM Plex Mono', fontWeight: 'bold', fontStyle: 'italic' }}>\n                Mouse Location\n            </div>\n            <pre style={{ fontFamily: 'IBM Plex Mono', fontSize:'11px' }}>\n                {JSON.stringify(calcMouseLocationDetail(), null, 2)}\n            </pre>\n        </div>\n    );\n});\n\nexport default MouseLocationPanel;\n","import React, { useContext } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../../store/AskariStore';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst RenderGridToggleSwitch = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n\n    const [switchState, setSwitchState] = React.useState(askariStore.gridTiles.enabled);\n\n    const toggleGridTile = () => {\n        // console.log('Toggling to', !askariStore.gridTiles.enabled);\n        askariStore.gridTiles.enabled = !askariStore.gridTiles.enabled;\n        setSwitchState(askariStore.gridTiles.enabled);\n    };\n\n    return <Switch checked={switchState} value=\"gridTileSwitch\" onChange={toggleGridTile} />;\n});\n\nconst RenderZoomLevelSelect = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n\n    const [zoomLevel, setZoomLevel] = React.useState(askariStore.gridTiles.zoomLevel);\n\n    const selectZoomLevel = event => {\n        askariStore.gridTiles.zoomLevel = event.target.value;\n        setZoomLevel(askariStore.gridTiles.zoomLevel);\n    };\n\n    return (\n        <Select value={zoomLevel} onChange={selectZoomLevel}>\n            <MenuItem value={10}>10</MenuItem>\n            <MenuItem value={11}>11</MenuItem>\n            <MenuItem value={12}>12</MenuItem>\n            <MenuItem value={9}>9</MenuItem>\n        </Select>\n    );\n});\n\nconst OptionsList = () => {\n    return (\n        <div>\n            <Grid container spacing={3} direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n                <Grid item>\n                    <Typography variant=\"body1\">Show Grid Tiles</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <RenderGridToggleSwitch />\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={3} direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n                <Grid item>\n                    <Typography variant=\"body1\">Grid Tile Zoom Level</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <RenderZoomLevelSelect />\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default OptionsList;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport OptionsList from './OptionsList';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction OptionsButton() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button\n                variant=\"contained\"\n                style={{\n                    backgroundColor: '#01579b',\n                    fontFamily: 'IBM Plex Mono',\n                    color: 'white',\n                    fontWeight: 'bold'\n\n                }}\n                onClick={handleClickOpen}\n                endIcon={<Icon>settings</Icon>}\n            >\n                Options\n            </Button>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                maxWidth=\"sm\"\n                fullWidth={true}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    <div\n                        style={{\n                            fontFamily: 'IBM Plex Mono',\n                            fontWeight: 'bold',\n                            fontStyle: 'italic'\n                        }}\n                    >\n                        {'~/Exige Options'}\n                    </div>\n                </DialogTitle>\n                <DialogContent>\n                    <OptionsList />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} style={{ color: '#33b5e5' }}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default OptionsButton;\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../../store/AskariStore';\n\nconst ElementToggle = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n\n    const toggleElement = elementName => {\n        askariStore.elementsToggle[elementName] = !askariStore.elementsToggle[elementName];\n    };\n\n    return (\n        <div\n            style={{\n                marginLeft: 'auto'\n            }}\n        >\n            <ButtonGroup color=\"secondary\" aria-label=\"outlined primary button group\">\n                <Button\n                    variant={askariStore.elementsToggle.mouseLocation ? 'contained' : 'outlined'}\n                    onClick={() => toggleElement('mouseLocation')}\n                    style={{\n                        fontFamily: 'IBM Plex Mono',\n                        fontWeight: 'bold',\n                        color: 'white'\n                    }}\n                >\n                    Mouse Location\n                </Button>\n                <Button\n                    variant={askariStore.elementsToggle.positionsTable ? 'contained' : 'outlined'}\n                    onClick={() => toggleElement('positionsTable')}\n                    style={{\n                        fontFamily: 'IBM Plex Mono',\n                        fontWeight: 'bold',\n                        color: 'white'\n                    }}\n                >\n                    Positions Table\n                </Button>\n            </ButtonGroup>\n        </div>\n    );\n});\n\nexport default ElementToggle;\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../../store/AskariStore';\nimport OptionsButton from './OptionsButton';\nimport ElementToggle from './ElementToggle';\n\nconst OptionsBar = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n\n    const toggleSioConnection = () => {\n        askariStore.snackbar.message = \"Toggling Socket.IO Connection...\";\n        askariStore.snackbar.isOpen = true;\n        askariStore.sio.isEnabled = !askariStore.sio.isEnabled;\n    }\n\n    return (\n        <div className=\"OptionsBar\">\n            <OptionsButton />\n\n            <ElementToggle />\n\n            <div\n                className=\"leftStatus\"\n                style={{\n                    marginLeft: 'auto',\n                    textTransform: 'none'\n                }}\n            >\n                <Button\n                    variant=\"contained\"\n                    style={{\n                        textTransform: 'none',\n                        fontFamily: 'IBM Plex Mono',\n                        backgroundColor: askariStore.sio.status === 'CONNECTED' ? '#1b5e20' : '#d50000',\n                        fontWeight: 'bold',\n                        color: 'white'\n                    }}\n                    onClick={toggleSioConnection}\n                >\n                    S.IO: {askariStore.sio.status}\n                </Button>\n            </div>\n        </div>\n    );\n});\n\nexport default OptionsBar;\n","import React, { useContext, useRef } from 'react';\nimport { Cartesian3, Transforms, Math, Color } from 'cesium';\nimport { Viewer, CameraFlyTo, Model, PolygonGraphics, Entity } from 'resium';\nimport glb from '../../assets/Cesium_Air.glb';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../store/AskariStore';\n\nconst CesiumMap = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n\n    let viewer = useRef();\n\n    const positions = Object.values(askariStore.positions);\n\n    const operations = Object.values(askariStore.operations);\n\n    /**\n     * DFW - -96.90490722656249, 32.90783871693625\n     * Test Site - -117.948840950631, 34.739227113042\n     */\n\n    const cameraDest = Cartesian3.fromDegrees(-117.948840950631, 34.739227113042, 100000);\n\n    const onClick = data => {\n        var { longitudeString, latitudeString } = calculateCoordinateFromCartesian(data.position);\n\n        askariStore.snackbar.message =\n            'Copied location - ' + latitudeString + ', ' + longitudeString;\n        askariStore.snackbar.isOpen = true;\n\n        navigator.clipboard.writeText(latitudeString + ', ' + longitudeString);\n    };\n\n    const calculateCoordinateFromCartesian = cartesianPosition => {\n        var longitudeString = 0;\n        var latitudeString = 0;\n\n        if (!viewer.scene) return { longitudeString, latitudeString };\n\n        var ellipsoid = viewer.scene.globe.ellipsoid;\n\n        var cartesian = viewer.scene.camera.pickEllipsoid(cartesianPosition, ellipsoid);\n\n        if (!cartesian) return { longitudeString, latitudeString };\n\n        var cartographicLocation = ellipsoid.cartesianToCartographic(cartesian);\n\n        longitudeString = Math.toDegrees(cartographicLocation.longitude).toFixed(15);\n        latitudeString = Math.toDegrees(cartographicLocation.latitude).toFixed(15);\n\n        if (!longitudeString || !latitudeString) return { longitudeString, latitudeString };\n\n        return { longitudeString, latitudeString };\n    };\n\n    const onMouseMove = data => {\n        var { longitudeString, latitudeString } = calculateCoordinateFromCartesian(\n            data.endPosition\n        );\n\n        askariStore.mouseLocation['lng'] = longitudeString;\n        askariStore.mouseLocation['lat'] = latitudeString;\n    };\n\n    return (\n        <Viewer\n            full\n            animation={false}\n            timeline={false}\n            clockViewModel={null}\n            shadows={false}\n            fullscreenButton={false}\n            selectionIndicator={false}\n            automaticallyTrackDataSourceClocks={false}\n            projectionPicker={false}\n            onClick={onClick}\n            onMouseMove={onMouseMove}\n            ref={e => {\n                viewer = e ? e.cesiumElement : null;\n            }}\n        >\n            <CameraFlyTo destination={cameraDest} duration={0} once={true} />\n\n            {positions.map(position => {\n                const origin = Cartesian3.fromDegrees(\n                    position.data.lonDeg,\n                    position.data.latDeg,\n                    2000.0\n                );\n\n                const modelMatrix = Transforms.eastNorthUpToFixedFrame(origin);\n\n                return (\n                    <Model\n                        key={position.data.vid}\n                        id={position.data.vid}\n                        url={glb}\n                        modelMatrix={modelMatrix}\n                        minimumPixelSize={128}\n                        maximumScale={100}\n                    />\n                );\n            })}\n\n            {operations.map(operation => {\n\n                let entities = [];\n                \n                for (var operationVolume of operation.operation_volumes) {\n\n                    var id = operation.gufi + '_' + operationVolume.ordinal;\n\n                    var coordsArray = [];\n\n                    for (var coords of operationVolume.protected_geography.coordinates[0]) {\n                        for (var coord of coords) {\n                            coordsArray.push(coord);\n                        }\n                        coordsArray.push(operationVolume.max_altitude_protected_wgs84_ft);\n                    }\n\n                    const polygon = Cartesian3.fromDegreesArrayHeights(coordsArray);\n\n                    entities.push(\n                        <Entity key={id} name={id}>\n                            <PolygonGraphics\n                                name={id}\n                                extrudedHeight={operationVolume.min_altitude_protected_wgs84_ft}\n                                perPositionHeight={true}\n                                hierarchy={polygon}\n                                material={Color.ORANGE.withAlpha(0.5)}\n                                outlineColor={Color.BLACK}\n                                outline={true}\n                            />\n                        </Entity>\n                    );\n                }\n\n                return entities;\n            })}\n        </Viewer>\n    );\n});\n\nexport default CesiumMap;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { observer } from \"mobx-react\";\nimport { AskariStoreContext } from \"../../store/AskariStore\";\n\nconst columns = [\n  {\n    id: \"vid\",\n    label: \"vid\",\n    align: \"left\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"latDeg\",\n    label: \"latDeg\",\n    align: \"right\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"lonDeg\",\n    label: \"lonDeg\",\n    align: \"right\",\n    format: value => value.toLocaleString()\n  }\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: \"80vh\"\n  }\n});\n\nconst PositionsTable = observer(() => {\n  const askariStore = useContext(AskariStoreContext);\n\n  const rows = Object.values(askariStore.positions);\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"PositionsTable\">\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map(column => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.data.vid}>\n                    {columns.map(column => {\n                      const value = row[\"data\"][column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n});\n\nexport default PositionsTable;\n","import React, { useContext } from 'react';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../store/AskariStore';\nimport MouseLocationPanel from './MouseLocationPanel';\nimport OptionsBar from './OptionsBar/OptionsBar';\nimport CesiumMap from './CesiumMap';\nimport PositionsTable from './PositionsTable';\n\nimport './Dashboard.css';\n\nconst RenderMouseLocationPanel = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n\n    if (askariStore.elementsToggle.mouseLocation) {\n        return <MouseLocationPanel />;\n    } else {\n        return null;\n    }\n});\n\nconst RenderPositionsTable = observer(() => {\n    const askariStore = useContext(AskariStoreContext);\n\n    if (askariStore.elementsToggle.positionsTable) {\n        return <PositionsTable />;\n    } else {\n        return null;\n    }\n});\n\nconst Dashboard = () => {\n    return (\n        <div className=\"Dashboard\">\n            <CesiumMap />\n            <OptionsBar />\n            <RenderPositionsTable />\n            <RenderMouseLocationPanel />\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import React, { useContext, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../store/AskariStore';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)'\n    },\n    title: {\n        fontSize: 14\n    },\n    pos: {\n        marginBottom: 12\n    }\n});\n\nconst DataTable = observer(() => {\n    const [showFlightDump, setShowFlightDump] = useState(false);\n\n    const askariStore = useContext(AskariStoreContext);\n\n    const positions = Object.values(askariStore.positions);\n\n    const classes = useStyles();\n\n    const RenderFlightData = () => {\n        if (!showFlightDump) {\n            return (\n                <div>\n                    {positions.map(position => {\n                        return (\n                            <>\n                                <Card id={position.data.vid} key={position.data.vid}>\n                                    <CardContent>\n                                        <Typography\n                                            className={classes.title}\n                                            color=\"textSecondary\"\n                                            gutterBottom\n                                        >\n                                            {position.data.vid}\n                                        </Typography>\n                                        <Typography variant=\"body\">\n                                            latDeg={position.data.latDeg} <br />\n                                            lonDeg={position.data.lonDeg} <br />\n                                            latency=\n                                            {new Date(\n                                                position.metadata.brodcastTimestamp\n                                            ).getTime() -\n                                                new Date(\n                                                    position.metadata.sourceTimestamp\n                                                ).getTime()} ms\n                                        </Typography>\n                                    </CardContent>\n                                </Card>{' '}\n                                <br />\n                            </>\n                        );\n                    })}\n                </div>\n            );\n        } else {\n            return (\n                <Card>\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Flight Dump\n                        </Typography>\n                        <div style={{ display: 'flex', overflowY: 'scroll', height: '80vh' }}>\n                            <pre>{JSON.stringify(positions, null, 2)}</pre>\n                        </div>\n                    </CardContent>\n                </Card>\n            );\n        }\n    };\n\n    return (\n        <div className=\"DataTable\">\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                    <Card>\n                        <CardContent>\n                            <Typography\n                                className={classes.title}\n                                color=\"textSecondary\"\n                                gutterBottom\n                            >\n                                Number of Flights\n                            </Typography>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                {positions.length}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                    <br />\n                    <Card\n                        style={{\n                            backgroundColor: askariStore.sio.status === 'CONNECTED' ? 'green' : 'red'\n                        }}\n                    >\n                        <CardContent>\n                            <Typography\n                                className={classes.title}\n                                color=\"textSecondary\"\n                                gutterBottom\n                            >\n                                Socket.IO Status\n                            </Typography>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                {askariStore.sio.status}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                    <br />\n                    <Card>\n                        <CardContent>\n                            <Typography\n                                className={classes.title}\n                                color=\"textSecondary\"\n                                gutterBottom\n                            >\n                                Options\n                            </Typography>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={showFlightDump}\n                                        onChange={() => {\n                                            setShowFlightDump(!showFlightDump);\n                                        }}\n                                        value=\"showFlightDump\"\n                                    />\n                                }\n                                label=\"Toggle Raw Data\"\n                            />\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={9}>\n                    <RenderFlightData />\n                </Grid>\n            </Grid>\n        </div>\n    );\n});\n\nexport default DataTable;\n","import React from 'react';\nimport DataTable from './DataTable';\n\n\nconst Inspector = () => {\n    return (\n        <div className=\"Inspector\" style={{paddingTop:\"30px\"}}>\n            <DataTable />\n        </div>\n    );\n};\n\nexport default Inspector;\n","import React, { useContext } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { observer } from \"mobx-react\";\nimport { AskariStoreContext } from \"../store/AskariStore\";\n\nconst AskariSnackbar = observer(() => {\n  const askariStore = useContext(AskariStoreContext);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    askariStore.snackbar.isOpen = false;\n  };\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        open={askariStore.snackbar.isOpen}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={askariStore.snackbar.message}\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleClose}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      ></Snackbar>\n    </>\n  );\n});\n\nexport default AskariSnackbar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: '#212121'\n    },\n    title: {\n        textDecoration: 'none',\n        color: 'white',\n        fontFamily: 'IBM Plex Mono',\n        fontWeight: 'bold',\n        fontStyle: 'italic',\n        padding: '15px'\n    },\n    dividerTitle: {\n        textTransform: 'uppercase',\n        fontFamily: 'IBM Plex Mono',\n        fontWeight: 'bold',\n        color: '#bdbdbd'\n    }\n}));\n\nfunction ExigeDrawer() {\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper\n            }}\n            anchor=\"left\"\n        >\n            <Typography component={Link} to=\"/\" variant=\"h4\" className={classes.title}>\n                ~/Exige\n            </Typography>\n            <Divider />\n            <List>\n                <ListItem>\n                    <div className={classes.dividerTitle}>Views</div>\n                </ListItem>\n                <ListItem button component={Link} to=\"/\">\n                    <ListItemIcon>\n                        <Icon>map</Icon>\n                    </ListItemIcon>\n                    <ListItemText>Map</ListItemText>\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem>\n                    <div className={classes.dividerTitle}>Inspector</div>\n                </ListItem>\n                <ListItem button component={Link} to=\"/inspector\">\n                    <ListItemIcon>\n                        <Icon>airplanemode_active</Icon>\n                    </ListItemIcon>\n                    <ListItemText>Traffic</ListItemText>\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>border_all</Icon>\n                    </ListItemIcon>\n                    <ListItemText>Network</ListItemText>\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem>\n                    <div className={classes.dividerTitle}>Cool Stuff</div>\n                </ListItem>\n                <ListItem button component={Link} to=\"/debug\">\n                    <ListItemIcon>\n                        <Icon>settings</Icon>\n                    </ListItemIcon>\n                    <ListItemText>Debug</ListItemText>\n                </ListItem>\n                <ListItem button component={Link} to=\"/loader\">\n                    <ListItemIcon>\n                        <Icon>add</Icon>\n                    </ListItemIcon>\n                    <ListItemText>Load Data</ListItemText>\n                </ListItem>\n                <ListItem button component={Link} to=\"/about\">\n                    <ListItemIcon>\n                        <Icon>sports_motorsports</Icon>\n                    </ListItemIcon>\n                    <ListItemText>About Exige</ListItemText>\n                </ListItem>\n            </List>\n            <Divider />\n        </Drawer>\n    );\n}\n\nexport default ExigeDrawer;\n","import React, { useState, useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { observer } from 'mobx-react';\nimport { AskariStoreContext } from '../../store/AskariStore';\n\nconst Loader = observer(() => {\n    const [loadData, setLoadData] = useState(null);\n\n    const askariStore = useContext(AskariStoreContext);\n\n    const loadDataToStore = () => {\n        console.log('We Loading');\n        try {\n            let inputData = JSON.parse(loadData);\n            let gufi = inputData['gufi'];\n            askariStore.operations[gufi] = inputData;\n        } catch (error) {\n            console.error('Caught error when parsing inputData - ', error);\n        }\n    };\n\n    return (\n        <Grid\n            container\n            spacing={3}\n            style={{\n                padding: '30px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '60vh'\n            }}\n        >\n            <Grid item xs={10}>\n                <Card style={{ maxHeight: '90vh' }}>\n                    <CardContent>\n                        <Typography\n                            variant=\"h5\"\n                            style={{\n                                fontFamily: 'IBM Plex Mono',\n                                fontWeight: 'bold',\n                                fontStyle: 'italic'\n                            }}\n                        >\n                            Load Data into Exige\n                        </Typography>{' '}\n                        <br />\n                        <TextField\n                            id=\"standard-multiline-static\"\n                            label=\"Load Data\"\n                            multiline\n                            rows=\"10\"\n                            variant=\"outlined\"\n                            style={{ width: '100%' }}\n                            onChange={data => setLoadData(data.target.value)}\n                        />\n                        <center>\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                endIcon={<Icon>send</Icon>}\n                                onClick={loadDataToStore}\n                            >\n                                Load Operation\n                            </Button>\n                        </center>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n});\n\nexport default Loader;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useStyles from \"./styles/useStyles\";\nimport Container from '@material-ui/core/Container';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Debug from './views/CoolStuff/Debug';\nimport About from './views/CoolStuff/About';\nimport SioClient from './components/SocketIO/SioClient';\nimport Dashboard from './views/Dashboard/Dashboard';\nimport Inspector from './views/Inspector/Inspector';\nimport AskariSnackbar from './components/AskariSnackbar';\nimport ExigeDrawer from './components/ExigeDrawer';\nimport Loader from './views/Loader/Loader';\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <SioClient />\n            <Router basename={process.env.PUBLIC_URL}>\n                <ExigeDrawer />\n                <main className={classes.content}>\n                    <Switch>\n                        <Route path=\"/debug\">\n                            <Container component=\"main\" className={classes.main}>\n                                <Debug />\n                            </Container>\n                        </Route>\n                        <Route path=\"/loader\">\n                            <Container component=\"main\" className={classes.main}>\n                                <Loader />\n                            </Container>\n                        </Route>\n                        <Route path=\"/about\">\n                            <Container component=\"main\" className={classes.main}>\n                                <About />\n                            </Container>\n                        </Route>\n                        <Route path=\"/inspector\">\n                            <Container component=\"main\" className={classes.main}>\n                                <Inspector />\n                            </Container>\n                        </Route>\n                        <Route path=\"/\">\n                            <Dashboard />\n                        </Route>\n                    </Switch>\n                </main>\n            </Router>\n            <AskariSnackbar />\n        </div>\n    );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport \"./styles/style.css\";\nimport App from \"./App\";\nimport theme from \"./styles/theme\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = Cesium;"],"sourceRoot":""}