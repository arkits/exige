{"version":3,"sources":["components/AppBar.js","components/Map/DrawStyles.js","components/Map/MouseLocationPanel.js","components/Composer/Sidebar.js","components/Map/Map.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["AppBar","className","style","padding","animate","margin","s","node","textAlign","to","getEditHandleStyle","feature","state","RenderStates","SELECTED","HOVERED","UNCOMMITTED","fill","fillOpacity","stroke","strokeWidth","r","getFeatureStyle","index","CLOSING","strokeDasharray","MouseLocationPanel","mouseLocation","zoomLevel","corners","layer","fontSize","JSON","stringify","latitude_rad","Math","PI","n","xtile","trunc","ytile","log","tan","cos","parseInt","calcMouseLocationDetail","Sidebar","data","header","icon","value","features","operationVolumes","forEach","push","geometry","displayOperationVolumes","Map","props","_updateViewport","viewport","setState","_onSelect","options","selectedFeatureIndex","_onDelete","selectedIndex","_editorRef","deleteFeatures","_onUpdate","editType","mode","EditorModes","EDITING","renderDrawTools","title","onClick","DRAW_POLYGON","renderMouseLocationPanel","containerComponent","gridZoomLevel","renderComposerSidebar","getFeatures","updateMouseLocation","e","latitude","longitude","handleGridZoomLevelSelectChange","event","target","drawGridTiles","onMapLoad","console","gridAdaptationZoomLevel","gridAdaptationUrl","axios","get","then","response","gridAdaptation","width","height","zoom","READ_ONLY","this","mapStyle","mapboxApiAccessToken","onViewportChange","onMouseMove","onLoad","ref","_","clickRadius","onSelect","onUpdate","editHandleShape","featureStyle","editHandleStyle","type","id","paint","flexDirection","onChange","Component","About","marginLeft","marginRight","marginTop","level","href","without","rel","App","theme","createTheme","basename","process","class","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0PA4BeA,MAvBf,WACI,OACI,yBAAKC,UAAU,SAASC,MAAO,CAAEC,QAAS,KACtC,kBAAC,SAAD,CAAQC,SAAO,GACX,kBAAC,MAAD,CAAKF,MAAO,CAAEG,OAAQ,IAClB,kBAAC,MAAD,CAAKC,EAAG,GACJ,kBAAC,UAAD,CAASC,KAAK,MAAd,YAEJ,kBAAC,MAAD,CAAKD,EAAG,EAAGJ,MAAO,CAAEM,UAAW,UAC3B,kBAAC,IAAD,CAAMP,UAAU,UAAUQ,GAAG,KAA7B,QAGA,0BAAMP,MAAO,CAAEC,QAAS,MACxB,kBAAC,IAAD,CAAMF,UAAU,UAAUQ,GAAG,UAA7B,c,qEChBjB,SAASC,EAAT,GAA8C,EAAjBC,QAClC,OADmD,EAARC,OAEzC,KAAKC,eAAaC,SAClB,KAAKD,eAAaE,QAClB,KAAKF,eAAaG,YAChB,MAAO,CACLC,KAAM,oBACNC,YAAa,EACbC,OAAQ,qBACRC,YAAa,EACbC,EAAG,GAGP,QACE,MAAO,CACLJ,KAAM,oBACNC,YAAa,EACbC,OAAQ,qBACRC,YAAa,EACbC,EAAG,IAKJ,SAASC,EAAT,GAAkD,EAAxBX,QAAwB,EAAfY,MACxC,OADuD,EAARX,OAE7C,KAAKC,eAAaC,SAClB,KAAKD,eAAaE,QAClB,KAAKF,eAAaG,YAClB,KAAKH,eAAaW,QAChB,MAAO,CACLL,OAAQ,oBACRC,YAAa,EACbH,KAAM,oBACNC,YAAa,GACbO,gBAAiB,OAGrB,QACE,MAAO,CACLN,OAAQ,oBACRC,YAAa,EACbH,KAAM,oBACNC,YAAa,KCPNQ,MAnCf,YAA2D,IAA7BC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,UAsBzC,OACI,yBAAK3B,UAAU,sBACX,kBAAC,QAAD,CAAO4B,QAAS,EAAGC,MAAM,WACrB,yBAAK5B,MAAO,CAAEC,QAAQ,cAClB,yBAAKD,MAAO,CAAE6B,SAAU,KACnBC,KAAKC,UA1BM,WAE5B,GAAgC,MAA7BN,EAAa,UAAsD,MAA9BA,EAAa,UACjD,MAAO,GAMX,IAAIO,EAAeC,KAAKC,IAAMT,EAAa,SAAe,KACtDU,EAAC,SAAG,EAAOT,GACXU,EAAQH,KAAKI,OAAQZ,EAAa,UAAgB,KAAS,IAASU,GACpEG,EAAQL,KAAKI,OAAQ,EAAMJ,KAAKM,IAAIN,KAAKO,IAAIR,GAAgB,EAAIC,KAAKQ,IAAIT,IAAiBC,KAAKC,IAAM,EAAOC,GAMjH,OAJAV,EAAa,EAAQW,EACrBX,EAAa,EAAQa,EACrBb,EAAa,UAAgBiB,SAAShB,GAE/BD,EAQyBkB,GAA2B,KAAM,QCL1DC,MAtBf,YAA4B,IAATC,EAAQ,EAARA,KAaf,OACI,yBAAK9C,UAAU,MACX,kBAAC,UAAD,CAASA,UAAU,KAAKG,SAAO,EAAC4C,OAAO,WAAWC,KAAM,MACpD,8BAAUhD,UAAU,0BAA0BiD,MAf1B,SAAAC,GAC5B,IAAIC,EAAmB,GAQvB,OANgB,MAAZD,GACAA,EAASE,SAAQ,SAAA1C,GACbyC,EAAiBE,KAAK3C,EAAQ4C,aAI/BvB,KAAKC,UAAUmB,EAAkB,KAAM,GAMeI,CAAwBT,QC+K9EU,E,YArLX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAkBVC,gBAAkB,SAAAC,GACd,EAAKC,SAAS,CAAED,cApBD,EAuBnBE,UAAY,SAAAC,GACR,EAAKF,SAAS,CACVG,qBAAsBD,GAAWA,EAAQC,wBAzB9B,EA6BnBC,UAAY,WACR,IAAMC,EAAgB,EAAKtD,MAAMoD,qBACX,OAAlBE,GAA0BA,GAAiB,GAC3C,EAAKC,WAAWC,eAAeF,IAhCpB,EAoCnBG,UAAY,YACS,eADS,EAAfC,UAEP,EAAKT,SAAS,CACVU,KAAMC,cAAYC,WAvCX,EA4CnBC,gBAAkB,WACd,OACI,yBAAKzE,UAAU,0BACX,yBAAKA,UAAU,qCACX,4BACIA,UAAU,sDACV0E,MAAM,mBACNC,QAAS,kBAAM,EAAKf,SAAS,CAAEU,KAAMC,cAAYK,kBAErD,4BACI5E,UAAU,oDACV0E,MAAM,SACNC,QAAS,EAAKX,eAxDf,EA+DnBa,yBAA2B,WACvB,OACI,kBAAC,EAAD,CACIC,mBAAoB,EAAKrB,MAAMqB,mBAC/BpD,cAAe,EAAKf,MAAMe,cAC1BC,UAAW,EAAKhB,MAAMoE,iBApEf,EAyEnBC,sBAAwB,WACpB,IAAM9B,EAAW,EAAKgB,YAAc,EAAKA,WAAWe,cACpD,OAAO,kBAAC,EAAD,CAASnC,KAAMI,KA3EP,EA8EnBgC,oBAAsB,SAAAC,GAClB,EAAKvB,SAAS,CACVlC,cAAe,CACX0D,SAAUD,EAAC,OAAW,GACtBE,UAAWF,EAAC,OAAW,OAlFhB,EAuFnBG,gCAAkC,SAAAC,GAC9B,IAAI5D,EAAY4D,EAAMC,OAAOvC,MAE7B,EAAKW,SAAS,CACVmB,cAAepD,IAGnB,EAAK8D,cAAc9D,IA9FJ,EAiGnB+D,UAAY,WACRC,QAAQnD,IAAI,cACZ,EAAKiD,cAAc,EAAK9E,MAAMoE,gBAnGf,EAsGnBU,cAAgB,SAAA9D,GACZ,GAAkB,IAAdA,EAAiB,CACjB,EAAKiC,SAAS,CAAEgC,wBAAyBjE,IAEzC,IAAIkE,EACA,oEACAlE,EACA,QAEJmE,IAAMC,IAAIF,GAAmBG,MAAK,SAAAC,GAC9BN,QAAQnD,IAAI,wBACZ,EAAKoB,SAAS,CAAEsC,eAAgB,OAChC,EAAKtC,SAAS,CAAEsC,eAAgBD,EAASnD,YAhHjD,EAAKoB,WAAa,KAClB,EAAKvD,MAAQ,CACTgD,SAAU,CACNwC,MAAO,OACPC,OAAQ,OACRhB,SAAU,OACVC,WAAY,QACZgB,KAAM,IAEV/B,KAAMC,cAAY+B,UAClBvC,qBAAsB,KACtBrC,cAAe,GACfwE,eAAgB,KAChBnB,cAAe,MAfJ,E,sEAuHT,IAAD,SACsBwB,KAAK5F,MAAxBgD,EADH,EACGA,SAAUW,EADb,EACaA,KAClB,OACI,yBAAKtE,UAAU,MACX,kBAAC,MAAD,CAAKA,UAAU,MACX,kBAAC,MAAD,CAAKK,EAAG,EAAGL,UAAU,MACjB,kBAAC,UAAD,iBACQ2D,EADR,CAEI6C,SAAS,iCACTC,qBAnIxB,2FAoIwBC,iBAAkBH,KAAK7C,gBACvBiD,YAAaJ,KAAKrB,oBAClB0B,OAAQL,KAAKb,YAEb,kBAAC,SAAD,CACImB,IAAK,SAAAC,GAAC,OAAK,EAAK5C,WAAa4C,GAC7B7G,MAAO,CAAEkG,MAAO,OAAQC,OAAQ,QAChCW,YAAa,GACbzC,KAAMA,EACN0C,SAAUT,KAAK1C,UACfoD,SAAUV,KAAKnC,UACf8C,gBAAiB,SACjBC,aAAc9F,EACd+F,gBAAiB3G,IAGrB,kBAAC,SAAD,CAAQ4G,KAAK,UAAUvE,KAAMyD,KAAK5F,MAAMuF,gBACpC,kBAAC,QAAD,CACIoB,GAAG,IACHD,KAAK,OACLE,MAAO,CACH,aAAc,wBACd,qBAAsB,yBACtB,eAAgB,MAI3BhB,KAAK9B,kBACL8B,KAAK1B,6BAGd,kBAAC,MAAD,CAAKxE,EAAG,EAAGL,UAAU,KAAKC,MAAO,CAAEuH,cAAe,WAC9C,4BACIxH,UAAU,sBACViD,MAAOsD,KAAKtD,MACZwE,SAAUlB,KAAKjB,iCAEf,4BAAQrC,MAAM,KAAd,cACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,KAAd,MAEJ,6BACCsD,KAAKvB,+B,GA9KZ0C,aC0BHC,MAnCf,WACI,OACI,yBAAK1H,MAAO,CAAEkG,MAAO,MAAOyB,WAAY,OAAQC,YAAa,OAAQC,UAAU,SAC3E,kBAAC,QAAD,CAAO3H,SAAO,EAAC4H,MAAO,EAAGnG,QAAS,GAC9B,kBAAC,UAAD,CAAS3B,MAAO,CAAEG,OAAQ,KACtB,2CAEA,iGAEA,qDAEA,4BACI,qCACA,4CACA,qCACA,qCACA,0CAGJ,gCACI,uBACI4H,KAAK,yCACLxC,OAAO,SACPyC,SAAO,EACPC,IAAI,uBAEJ,kBAAC,SAAD,CAAQ/H,SAAO,GAAf,wBCObgI,MA5Bf,WACI,OACI,yBAAKnI,UAAU,OACX,kBAAC,gBAAD,CAAeoI,MAAOC,yBAClB,kBAAC,QAAD,CAAOlI,SAAO,GACV,kBAAC,IAAD,CAAQmI,SAAUC,gBACd,yBAAKC,MAAM,OACP,yBAAKA,MAAM,OACP,kBAAC,EAAD,OAEJ,yBAAKA,MAAM,eACP,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,UACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,CAAKzI,UAAU,gB,OCZnC0I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,MAAK,SAAAsD,GACjCA,EAAaC,kB","file":"static/js/main.2071bd33.chunk.js","sourcesContent":["import React from 'react';\nimport { Header, Heading, Row } from 'arwes';\nimport { Link } from 'react-router-dom';\nimport { Col } from 'arwes/lib/Grid';\n\nfunction AppBar() {\n    return (\n        <div className=\"AppBar\" style={{ padding: 20 }}>\n            <Header animate>\n                <Row style={{ margin: 0 }}>\n                    <Col s={9}>\n                        <Heading node=\"h1\">-/Exige</Heading>\n                    </Col>\n                    <Col s={3} style={{ textAlign: 'right' }}>\n                        <Link className=\"navLink\" to=\"/\">\n                            Home\n                        </Link>\n                        <span style={{ padding: 20 }} />\n                        <Link className=\"navLink\" to=\"/about\">\n                            About\n                        </Link>\n                    </Col>\n                </Row>\n            </Header>\n        </div>\n    );\n}\n\nexport default AppBar;\n","import {RenderStates} from 'react-map-gl-draw';\n\nexport function getEditHandleStyle({feature, state}) {\n  switch (state) {\n    case RenderStates.SELECTED:\n    case RenderStates.HOVERED:\n    case RenderStates.UNCOMMITTED:\n      return {\n        fill: 'rgb(251, 176, 59)',\n        fillOpacity: 1,\n        stroke: 'rgb(255, 255, 255)',\n        strokeWidth: 2,\n        r: 7\n      };\n\n    default:\n      return {\n        fill: 'rgb(251, 176, 59)',\n        fillOpacity: 1,\n        stroke: 'rgb(255, 255, 255)',\n        strokeWidth: 2,\n        r: 5\n      };\n  }\n}\n\nexport function getFeatureStyle({feature, index, state}) {\n  switch (state) {\n    case RenderStates.SELECTED:\n    case RenderStates.HOVERED:\n    case RenderStates.UNCOMMITTED:\n    case RenderStates.CLOSING:\n      return {\n        stroke: 'rgb(251, 176, 59)',\n        strokeWidth: 2,\n        fill: 'rgb(251, 176, 59)',\n        fillOpacity: 0.3,\n        strokeDasharray: '4,2'\n      };\n\n    default:\n      return {\n        stroke: 'rgb(60, 178, 208)',\n        strokeWidth: 2,\n        fill: 'rgb(60, 178, 208)',\n        fillOpacity: 0.1\n      };\n  }\n}","import React from 'react';\nimport { Frame } from 'arwes';\n\nfunction MouseLocationPanel({ mouseLocation, zoomLevel }) {\n    const calcMouseLocationDetail = () => {\n\n        if(mouseLocation['latitude'] == null || mouseLocation['longitude'] == null){\n            return {};\n        }\n\n        // Conversion from co-ordinate to Slippy X/Y adapted from\n        // https://github.com/interuss/dss/blob/legacy/tcl4/datanode/src/slippy_util.py  \n        \n        let latitude_rad = Math.PI * (mouseLocation['latitude'] / 180);\n        let n = 2.0 ** zoomLevel;\n        let xtile = Math.trunc(((mouseLocation['longitude'] + 180.0) / 360.0) * n);\n        let ytile = Math.trunc(((1.0 - Math.log(Math.tan(latitude_rad) + 1 / Math.cos(latitude_rad)) / Math.PI) / 2.0) * n);\n\n        mouseLocation['x'] = xtile;\n        mouseLocation['y'] = ytile;\n        mouseLocation['zoomLevel'] = parseInt(zoomLevel);\n\n        return mouseLocation;\n    };\n\n    return (\n        <div className=\"MouseLocationPanel\">\n            <Frame corners={4} layer=\"primary\">\n                <div style={{ padding:'10px 20px' }}>\n                    <pre style={{ fontSize: 14 }}>\n                        {JSON.stringify(calcMouseLocationDetail(), null, 2)}\n                    </pre>\n                </div>\n            </Frame>\n        </div>\n    );\n}\n\nexport default MouseLocationPanel;\n","import React from 'react';\nimport { Project } from 'arwes';\n\nfunction Sidebar({ data }) {\n    const displayOperationVolumes = features => {\n        let operationVolumes = [];\n\n        if (features != null) {\n            features.forEach(feature => {\n                operationVolumes.push(feature.geometry);\n            });\n        }\n\n        return JSON.stringify(operationVolumes, null, 2);\n    };\n\n    return (\n        <div className=\"fh\">\n            <Project className=\"fh\" animate header=\"Composer\" icon={null}>\n                <textarea className=\"composerSidebarTextarea\" value={displayOperationVolumes(data)} />\n            </Project>\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Col, Row } from 'arwes/lib/Grid';\nimport MapGL, { Source, Layer } from 'react-map-gl';\nimport { Editor, EditorModes } from 'react-map-gl-draw';\nimport { getFeatureStyle, getEditHandleStyle } from './DrawStyles';\nimport MouseLocationPanel from './MouseLocationPanel';\nimport Sidebar from '../Composer/Sidebar';\n\nconst TOKEN =\n    'pk.eyJ1IjoiYXJraXRzIiwiYSI6ImNqc3Bud29jMjAzcWc0OXJ6Y3YzOHltaTcifQ.EMMG5GSbT0T-lD8RGJgnAA';\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this._editorRef = null;\n        this.state = {\n            viewport: {\n                width: '100%',\n                height: '100%',\n                latitude: 37.719,\n                longitude: -122.344,\n                zoom: 10\n            },\n            mode: EditorModes.READ_ONLY,\n            selectedFeatureIndex: null,\n            mouseLocation: {},\n            gridAdaptation: null,\n            gridZoomLevel: '10'\n        };\n    }\n\n    _updateViewport = viewport => {\n        this.setState({ viewport });\n    };\n\n    _onSelect = options => {\n        this.setState({\n            selectedFeatureIndex: options && options.selectedFeatureIndex\n        });\n    };\n\n    _onDelete = () => {\n        const selectedIndex = this.state.selectedFeatureIndex;\n        if (selectedIndex !== null && selectedIndex >= 0) {\n            this._editorRef.deleteFeatures(selectedIndex);\n        }\n    };\n\n    _onUpdate = ({ editType }) => {\n        if (editType === 'addFeature') {\n            this.setState({\n                mode: EditorModes.EDITING\n            });\n        }\n    };\n\n    renderDrawTools = () => {\n        return (\n            <div className=\"mapboxgl-ctrl-top-left\">\n                <div className=\"mapboxgl-ctrl-group mapboxgl-ctrl\">\n                    <button\n                        className=\"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_polygon\"\n                        title=\"Polygon tool (p)\"\n                        onClick={() => this.setState({ mode: EditorModes.DRAW_POLYGON })}\n                    />\n                    <button\n                        className=\"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_trash\"\n                        title=\"Delete\"\n                        onClick={this._onDelete}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    renderMouseLocationPanel = () => {\n        return (\n            <MouseLocationPanel\n                containerComponent={this.props.containerComponent}\n                mouseLocation={this.state.mouseLocation}\n                zoomLevel={this.state.gridZoomLevel}\n            />\n        );\n    };\n\n    renderComposerSidebar = () => {\n        const features = this._editorRef && this._editorRef.getFeatures();\n        return <Sidebar data={features} />;\n    };\n\n    updateMouseLocation = e => {\n        this.setState({\n            mouseLocation: {\n                latitude: e['lngLat'][1],\n                longitude: e['lngLat'][0]\n            }\n        });\n    };\n\n    handleGridZoomLevelSelectChange = event => {\n        let zoomLevel = event.target.value;\n\n        this.setState({\n            gridZoomLevel: zoomLevel\n        })\n\n        this.drawGridTiles(zoomLevel);\n    };\n\n    onMapLoad = () => {\n        console.log('Map Loaded');\n        this.drawGridTiles(this.state.gridZoomLevel);\n    };\n\n    drawGridTiles = zoomLevel => {\n        if (zoomLevel !== 0) {\n            this.setState({ gridAdaptationZoomLevel: zoomLevel });\n\n            let gridAdaptationUrl =\n                'https://raw.githubusercontent.com/arkits/exige-react/master/grid/' +\n                zoomLevel +\n                '.json';\n\n            axios.get(gridAdaptationUrl).then(response => {\n                console.log('Got Grid Adaptation!');\n                this.setState({ gridAdaptation: null });\n                this.setState({ gridAdaptation: response.data });\n            });\n        }\n    };\n\n    render() {\n        const { viewport, mode } = this.state;\n        return (\n            <div className=\"fh\">\n                <Row className=\"fh\">\n                    <Col s={9} className=\"fh\">\n                        <MapGL\n                            {...viewport}\n                            mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n                            mapboxApiAccessToken={TOKEN}\n                            onViewportChange={this._updateViewport}\n                            onMouseMove={this.updateMouseLocation}\n                            onLoad={this.onMapLoad}\n                        >\n                            <Editor\n                                ref={_ => (this._editorRef = _)}\n                                style={{ width: '100%', height: '100%' }}\n                                clickRadius={12}\n                                mode={mode}\n                                onSelect={this._onSelect}\n                                onUpdate={this._onUpdate}\n                                editHandleShape={'circle'}\n                                featureStyle={getFeatureStyle}\n                                editHandleStyle={getEditHandleStyle}\n                            />\n\n                            <Source type=\"geojson\" data={this.state.gridAdaptation}>\n                                <Layer\n                                    id=\"1\"\n                                    type=\"fill\"\n                                    paint={{\n                                        'fill-color': 'rgba(255,255,255,0.0)',\n                                        'fill-outline-color': 'rgba(51, 181, 229,1.0)',\n                                        'fill-opacity': 1\n                                    }}\n                                />\n                            </Source>\n                            {this.renderDrawTools()}\n                            {this.renderMouseLocationPanel()}\n                        </MapGL>\n                    </Col>\n                    <Col s={3} className=\"fh\" style={{ flexDirection: 'column' }}>\n                        <select\n                            className=\"gridZoomLevelSelect\"\n                            value={this.value}\n                            onChange={this.handleGridZoomLevelSelectChange}\n                        >\n                            <option value=\"0\">Zoom Level</option>\n                            <option value=\"12\">12</option>\n                            <option value=\"11\">11</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"9\">9</option>\n                        </select>\n                        <br />\n                        {this.renderComposerSidebar()}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Map;\n","import React from 'react';\nimport { Frame, Button, Content } from 'arwes';\n\nfunction About() {\n    return (\n        <div style={{ width: '50%', marginLeft: 'auto', marginRight: 'auto', marginTop:'50px' }}>\n            <Frame animate level={1} corners={3}>\n                <Content style={{ margin: 20 }}>\n                    <h1>About Exige</h1>\n\n                    <p>Exige is a proof-of-concept traffic visualizer for UAM / UTM data.</p>\n\n                    <h4>Exige is built with: </h4>\n\n                    <ul>\n                        <li>react</li>\n                        <li>react-map-gl</li>\n                        <li>arwes</li>\n                        <li>axios</li>\n                        <li>node-sass</li>\n                    </ul>\n\n                    <center>\n                        <a\n                            href=\"https://github.com/arkits/exige-react/\"\n                            target=\"_blank\"\n                            without\n                            rel=\"noopener noreferrer\"\n                        >\n                            <Button animate>View on GitHub</Button>\n                        </a>\n                    </center>\n                </Content>\n            </Frame>\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport { ThemeProvider, createTheme, Arwes } from 'arwes';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport AppBar from './components/AppBar';\nimport Map from './components/Map/Map';\nimport About from './components/About';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={createTheme()}>\n                <Arwes animate>\n                    <Router basename={process.env.PUBLIC_URL}>\n                        <div class=\"box\">\n                            <div class=\"row\">\n                                <AppBar />\n                            </div>\n                            <div class=\"row content\">\n                                <Switch>\n                                    <Route path=\"/about\">\n                                        <About />\n                                    </Route>\n                                    <Route path=\"/\">\n                                        <Map className=\"fh\" />\n                                    </Route>\n                                </Switch>\n                            </div>\n                        </div>\n                    </Router>\n                </Arwes>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/Base.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}