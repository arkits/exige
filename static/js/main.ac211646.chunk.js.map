{"version":3,"sources":["../external \"Cesium\"","serviceWorker.js","components/Drawer.js","components/AppBar.js","store/ExigeStore.js","pages/dashboard/Map.js","pages/dashboard/OptionsBar/OptionsBar.js","pages/dashboard/MouseLocationPanel.js","pages/dashboard/Dashboard.js","App.js","theme.js","index.js"],"names":["module","exports","Cesium","Boolean","window","location","hostname","match","useStyles","makeStyles","drawer","width","TemporaryDrawer","classes","React","useState","isOpen","setIsOpen","toggleDrawer","open","event","type","key","Fragment","IconButton","color","aria-label","onClick","edge","style","Drawer","anchor","onClose","role","onKeyDown","className","display","height","flexDirection","flexGrow","Typography","variant","fontFamily","fontWeight","fontStyle","marginTop","marginBottom","Divider","List","ListItem","button","component","RouterLink","to","ListItemIcon","ListItemText","primary","target","href","theme","titleText","subtitleText","appBar","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","ExigeAppBar","AppBar","position","Toolbar","noWrap","ExigeStore","sio","status","isEnabled","operations","positions","mouseLocation","snackbar","message","elementsToggle","operationsTable","positionsTable","map","cameraCenter","latitude","longitude","altitude","drawerOpen","decorate","observable","ExigeStoreContext","createContext","Map","observer","exigeStore","useContext","viewer","useRef","cameraDest","Cartesian3","fromDegrees","useEffect","console","log","Ion","defaultAccessToken","animation","timeline","fullscreenButton","ref","e","cesiumElement","scene","debugShowFramesPerSecond","requestRenderMode","onMouseMove","data","cartesianPosition","longitudeString","latitudeString","ellipsoid","globe","cartesian","camera","pickEllipsoid","cartographicLocation","cartesianToCartographic","Math","toDegrees","toFixed","calculateCoordinateFromCartesian","endPosition","parseFloat","destination","OptionsBar","Button","marginLeft","endIcon","Icon","backgroundColor","MouseLocationPanel","fontSize","JSON","stringify","latitudeRad","PI","n","xtile","trunc","ytile","tan","cos","parseInt","calcMouseLocationDetail","Dashboard","root","content","flex","paddingTop","spacing","mainContent","About","Inspector","App","hideLoader","basename","process","path","createMuiTheme","palette","main","indigo","secondary","loader","document","querySelector","ReactDOM","render","ThemeProvider","CssBaseline","classList","add","showLoader","remove","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ac211646.chunk.js","sourcesContent":["module.exports = Cesium;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Drawer,\n    List,\n    Divider,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Typography,\n    IconButton,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\nimport TimelineRoundedIcon from '@material-ui/icons/TimelineRounded';\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    drawer: {\n        width: 250,\n    },\n});\n\nfunction TemporaryDrawer() {\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setIsOpen(open);\n    };\n\n    return (\n        <div>\n            <React.Fragment>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={toggleDrawer(true)}\n                    edge=\"start\"\n                    style={{ color: 'white' }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Drawer anchor=\"left\" open={isOpen} onClose={toggleDrawer(false)}>\n                    <div\n                        role=\"presentation\"\n                        onClick={toggleDrawer(false)}\n                        onKeyDown={toggleDrawer(false)}\n                    >\n                        <div className={classes.drawer}></div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                width: '100%',\n                                height: '100vh',\n                                flexDirection: 'column',\n                            }}\n                        >\n                            <div style={{ flexGrow: '1' }}>\n                                <center>\n                                    <Typography\n                                        variant=\"h4\"\n                                        style={{\n                                            fontFamily: 'IBM Plex Mono',\n                                            fontWeight: 'bold',\n                                            fontStyle: 'italic',\n                                            marginTop: '20px',\n                                            marginBottom: '20px',\n                                        }}\n                                    >\n                                        ~/Exige\n                                    </Typography>\n                                </center>\n                                <Divider />\n                                <List>\n                                    <ListItem button component={RouterLink} to=\"/\">\n                                        <ListItemIcon>\n                                            <DashboardRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={'Dashboard'} />\n                                    </ListItem>\n                                    <ListItem button component={RouterLink} to=\"/inspector\">\n                                        <ListItemIcon>\n                                            <TimelineRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={'Inspector'} />\n                                    </ListItem>\n                                </List>\n                                <Divider />\n                                <List>\n                                    <ListItem button component={RouterLink} to=\"/about\">\n                                        <ListItemIcon>\n                                            <InfoRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={'About Exige'} />\n                                    </ListItem>\n                                </List>\n                                <Divider />\n                            </div>\n                            <div style={{ marginBottom: '20px' }}>\n                                <center>\n                                    <a target=\"_blank\" href=\"https://github.com/arkits/exige\">\n                                        <IconButton\n                                            color=\"white\"\n                                            aria-label=\"upload picture\"\n                                            component=\"span\"\n                                        >\n                                            <GitHubIcon />\n                                        </IconButton>\n                                    </a>\n                                </center>\n                            </div>\n                        </div>\n                    </div>{' '}\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n}\n\nexport default TemporaryDrawer;\n","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from './Drawer';\n\nconst useStyles = makeStyles((theme) => ({\n    titleText: {\n        display: 'flex',\n        flexGrow: '1',\n        fontFamily: 'IBM Plex Mono',\n        fontWeight: 'bold',\n        fontStyle: 'italic',\n    },\n    subtitleText: {\n        fontFamily: 'IBM Plex Mono',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n}));\n\nfunction ExigeAppBar() {\n    const classes = useStyles();\n    return (\n        <div>\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"primary\">\n                <Toolbar>\n                    <Drawer />\n                    <Typography className={classes.titleText} variant=\"h5\" noWrap>\n                        ~/Exige\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default ExigeAppBar;\n","import { observable, decorate } from 'mobx';\nimport { createContext } from 'react';\n\nclass ExigeStore {\n    sio = {\n        status: 'DISCONNECTED',\n        isEnabled: false,\n    };\n    operations = {};\n    positions = {};\n    mouseLocation = {};\n    snackbar = {\n        message: null,\n        isOpen: false,\n        type: null,\n    };\n    elementsToggle = {\n        mouseLocation: true,\n        operationsTable: true,\n        positionsTable: false,\n    };\n    map = {\n        cameraCenter: {\n            latitude: 37.6213129,\n            longitude: -122.3789554,\n            altitude: 100000,\n        },\n    };\n    drawerOpen = true;\n}\n\ndecorate(ExigeStore, {\n    sio: observable,\n    operations: observable,\n    positions: observable,\n    mouseLocation: observable,\n    snackbar: observable,\n    elementsToggle: observable,\n    map: observable,\n});\n\nexport const ExigeStoreContext = createContext(new ExigeStore());\n","import React, { useRef, useContext, useEffect } from 'react';\nimport { Cartesian3, Transforms, Math, Color, HeadingPitchRoll, Ion } from 'cesium';\nimport {\n    Viewer,\n    CameraFlyTo,\n    Model,\n    PolygonGraphics,\n    Entity,\n    GeoJsonDataSource,\n    CzmlDataSource,\n} from 'resium';\nimport { observer } from 'mobx-react';\nimport { ExigeStoreContext } from '../../store/ExigeStore';\n\nconst Map = observer(() => {\n    const exigeStore = useContext(ExigeStoreContext);\n\n    let viewer = useRef();\n\n    let cameraCenter = exigeStore.map.cameraCenter;\n    let cameraDest = Cartesian3.fromDegrees(\n        cameraCenter.longitude,\n        cameraCenter.latitude,\n        cameraCenter.altitude\n    );\n\n    useEffect(() => {\n        console.log('cameraDest got updated!', cameraDest);\n    }, [cameraDest]);\n\n    const calculateCoordinateFromCartesian = (cartesianPosition) => {\n        var longitudeString = 0;\n        var latitudeString = 0;\n\n        if (!viewer) return { longitudeString, latitudeString };\n\n        if (!viewer.scene) return { longitudeString, latitudeString };\n\n        var ellipsoid = viewer.scene.globe.ellipsoid;\n\n        var cartesian = viewer.scene.camera.pickEllipsoid(cartesianPosition, ellipsoid);\n\n        if (!cartesian) return { longitudeString, latitudeString };\n\n        var cartographicLocation = ellipsoid.cartesianToCartographic(cartesian);\n\n        longitudeString = Math.toDegrees(cartographicLocation.longitude).toFixed(15);\n        latitudeString = Math.toDegrees(cartographicLocation.latitude).toFixed(15);\n\n        if (!longitudeString || !latitudeString) return { longitudeString, latitudeString };\n\n        return { longitudeString, latitudeString };\n    };\n\n    const onMouseMove = (data) => {\n        var { longitudeString, latitudeString } = calculateCoordinateFromCartesian(\n            data.endPosition\n        );\n\n        exigeStore.mouseLocation['lng'] = parseFloat(longitudeString);\n        exigeStore.mouseLocation['lat'] = parseFloat(latitudeString);\n    };\n\n    Ion.defaultAccessToken =\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzMDJkNjJkYy1iMTAxLTQ5NjktYThmNC0zN2YwNjUxYjBkYjUiLCJpZCI6MTk1NzQsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1NzU4NDc3OTJ9.YIZUsKDifeCV1hoT4N1kNoASGQzM3yJoox_GLxdD2lo';\n\n    return (\n        <div>\n            <Viewer\n                animation={false}\n                timeline={false}\n                fullscreenButton={false}\n                style={{\n                    height: '93vh',\n                }}\n                ref={(e) => {\n                    viewer = e ? e.cesiumElement : null;\n                    if (e != null) {\n                        viewer.scene.debugShowFramesPerSecond = true;\n                        viewer.scene.requestRenderMode = true;\n                    }\n                }}\n                onMouseMove={onMouseMove}\n            >\n                <CameraFlyTo destination={cameraDest} duration={0} />\n            </Viewer>\n        </div>\n    );\n});\n\nexport default Map;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\nfunction OptionsBar() {\n    return (\n        <div className=\"OptionsBar\">\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{\n                    marginLeft: '10px',\n                    fontFamily: 'IBM Plex Mono',\n                    color: 'white',\n                    fontWeight: 'bold',\n                }}\n                endIcon={<Icon>settings</Icon>}\n            >\n                Options\n            </Button>\n            <Button\n                variant=\"contained\"\n                style={{\n                    marginLeft: '10px',\n                    backgroundColor: '#2e7d32',\n                    fontFamily: 'IBM Plex Mono',\n                    color: 'white',\n                    fontWeight: 'bold',\n                }}\n                endIcon={<Icon>add</Icon>}\n            >\n                Manage Data\n            </Button>\n        </div>\n    );\n}\n\nexport default OptionsBar;\n","import React, { useContext } from 'react';\nimport { observer } from 'mobx-react';\nimport { ExigeStoreContext } from '../../store/ExigeStore';\n\nconst MouseLocationPanel = observer(() => {\n    const exigeStore = useContext(ExigeStoreContext);\n\n    const calcMouseLocationDetail = () => {\n        let mouseLocation = exigeStore.mouseLocation;\n        let zoomLevel = 10;\n\n        // Conversion from co-ordinate to Slippy X/Y adapted from\n        // https://github.com/interuss/dss/blob/legacy/tcl4/datanode/src/slippy_util.py\n\n        let latitudeRad = Math.PI * (mouseLocation['lat'] / 180);\n        let n = 2.0 ** zoomLevel;\n        let xtile = Math.trunc(((mouseLocation['lng'] + 180.0) / 360.0) * n);\n        let ytile = Math.trunc(\n            ((1.0 - Math.log(Math.tan(latitudeRad) + 1 / Math.cos(latitudeRad)) / Math.PI) / 2.0) *\n                n\n        );\n\n        mouseLocation['x'] = xtile;\n        mouseLocation['y'] = ytile;\n        mouseLocation['zoomLevel'] = parseInt(zoomLevel);\n\n        return mouseLocation;\n    };\n\n    return (\n        <div className=\"MouseLocationPanel\">\n            <div style={{ fontFamily: 'IBM Plex Mono', fontWeight: 'bold', fontStyle: 'italic' }}>\n                Mouse Location\n            </div>\n            <pre style={{ fontFamily: 'IBM Plex Mono', fontSize: '11px' }}>\n                {JSON.stringify(calcMouseLocationDetail(), null, 2)}\n            </pre>\n        </div>\n    );\n});\n\nexport default MouseLocationPanel;\n","import React from 'react';\nimport Map from './Map';\nimport OptionsBar from './OptionsBar/OptionsBar';\nimport './Dashboard.css';\nimport MouseLocationPanel from './MouseLocationPanel';\n\nfunction Dashboard() {\n    return (\n        <div>\n            <Map />\n            <OptionsBar />\n            <MouseLocationPanel />\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboard from './pages/dashboard/Dashboard';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        height: '100%',\n    },\n    content: {\n        flex: '1',\n        height: '100vh',\n        display: 'flex',\n        paddingTop: theme.spacing(8),\n    },\n    mainContent: {\n        height: '100%',\n        width: '100%',\n    },\n}));\n\nfunction Settings() {\n    return <h2>Settings</h2>;\n}\n\nfunction About() {\n    return <h2>About</h2>;\n}\n\nfunction Inspector() {\n    return <h2>Inspector</h2>;\n}\n\nfunction App({ hideLoader }) {\n    const classes = useStyles();\n\n    useEffect(hideLoader, []);\n    return (\n        <div>\n            <Router basename={process.env.PUBLIC_URL}>\n                <AppBar />\n                <main className={classes.content}>\n                    <div className={classes.mainContent}>\n                        <Switch>\n                            <Route path=\"/about\">\n                                <About />\n                            </Route>\n                            <Route path=\"/inspector\">\n                                <Inspector />\n                            </Route>\n                            <Route path=\"/\">\n                                <Dashboard />\n                            </Route>\n                        </Switch>\n                    </div>\n                </main>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { indigo } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: indigo[500],\n        },\n        secondary: {\n            main: '#f44336',\n        },\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nconst loader = document.querySelector('.loader');\n\nconst showLoader = () => loader.classList.remove('loader--hide');\n\nconst hideLoader = () => loader.classList.add('loader--hide');\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App hideLoader={hideLoader} showLoader={showLoader} />\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}